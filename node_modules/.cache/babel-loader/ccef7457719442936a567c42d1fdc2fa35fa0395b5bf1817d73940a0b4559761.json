{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryan\\\\Desktop\\\\DremaAI\\\\JobApply\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\UploadResume.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadResume() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:5000/upload', formData);\n      navigate('/results', {\n        state: {\n          data: response.data.links\n        }\n      });\n    } catch (error) {\n      console.error('Upload error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Processing...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadResume, \"+YfdS6NqWvBgxnMbR056bIenLtY=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","UploadResume","_s","file","setFile","loading","setLoading","navigate","handleSubmit","e","preventDefault","formData","FormData","append","response","post","state","data","links","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","accept","onChange","target","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Aryan/Desktop/DremaAI/JobApply/frontend/src/components/Dashboard/UploadResume.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function UploadResume() {\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:5000/upload', formData);\r\n            navigate('/results', { state: { data: response.data.links } });\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload Resume</h2>\r\n            <form onSubmit={handleSubmit} className=\"upload-form\">\r\n                <input type=\"file\" accept=\".pdf\"\r\n                    onChange={(e) => setFile(e.target.files[0])} />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Processing...' : 'Upload'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACP,IAAI,EAAE;IAEX,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAE7B,IAAI;MACAG,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMQ,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC;MAC3EJ,QAAQ,CAAC,UAAU,EAAE;QAAES,KAAK,EAAE;UAAEC,IAAI,EAAEH,QAAQ,CAACG,IAAI,CAACC;QAAM;MAAE,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC,CAAC,SAAS;MACNb,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA;MAAM0B,QAAQ,EAAElB,YAAa;MAACmB,SAAS,EAAC,aAAa;MAAAN,QAAA,gBACjDrB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAC5BC,QAAQ,EAAGrB,CAAC,IAAKL,OAAO,CAACK,CAAC,CAACsB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDzB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACK,QAAQ,EAAE5B,OAAQ;QAAAgB,QAAA,EACnChB,OAAO,GAAG,eAAe,GAAG;MAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACvB,EAAA,CAnCuBD,YAAY;EAAA,QAGfH,WAAW;AAAA;AAAAoC,EAAA,GAHRjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}